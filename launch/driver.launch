<launch>
    <arg name="use_imu" default="true"/>
    <arg name="use_lights" default="true"/>
    <arg name="webui_joy" default="true"/>
    <arg name="kalman_params" default="false"/>
    <arg name="wheel" default="offroad"/>
    <arg name="joy" default="true"/>

    <!-- wheel definition -->
    <param name="robot_length" type="float" value="0.44"/>
    <group if="$(eval arg('wheel') == offroad)">
        <arg name="robot_width" type="float" value="0.697"/>
        <arg name="wheel_radius" type="float" value="0.1825"/>
        <arg name="kinematics_type" type="string" value="classic"/>
    </group>

    <group if="$(eval arg('wheel') == small_pneumatic)">
        <arg name="robot_width" type="float" value="0.616"/>
        <arg name="wheel_radius" type="float" value="0.1015"/>
        <arg name="kinematics_type" type="string" value="classic"/>
    </group>

    <group if="$(eval arg('wheel') == mecanum)">
        <arg name="robot_width" type="float" value="0.6785"/>
        <arg name="wheel_radius" type="float" value="0.1015"/>
        <arg name="kinematics_type" type="string" value="mecanum"/>
    </group>

    <!-- kalman parameters -->
    <group if="$(arg kalman_params)">
        <arg name="publish_tf" type="bool" value="false"/>
        <arg name="publish_pose" type="bool" value="false"/>
        <arg name="publish_odometry" type="bool" value="true"/>
    </group>

    <group unless="$(arg kalman_params)">
        <arg name="publish_tf" type="bool" value="true"/>
        <arg name="publish_pose" type="bool" value="true"/>
        <arg name="publish_odometry" type="bool" value="false"/>
    </group>


    <node pkg="panther_driver" name="panther_driver" type="driver_node.py" output="screen" required="true">
        <param name="can_interface" type="string" value="panther_can"/>
        <param name="wheel_type" type="string" value="$(arg kinematics_type)"/>
        
        <param name="odom_frame" type="string" value="odom"/>
        <param name="base_link_frame" type="string" value="base_link"/>
        <param name="publish_tf" type="bool" value="$(arg publish_tf)"/>
        <param name="publish_pose" type="bool" value="$(arg publish_pose)"/>
        <param name="publish_odometry" type="bool" value="$(arg publish_odometry)"/>

        <param name="robot_width" type="double" value="$(arg robot_width)"/>
        <param name="robot_length" type="double" value="$(arg robot_length)"/>
        <param name="wheel_radius" type="double" value="$(arg wheel_radius)"/>
        <param name="eds_file" type="string" value="$(find panther_driver)/params/roboteq_motor_controllers_v60.eds"/>
    </node>

    <!-- optional nodes -->
    <group if="$(arg use_lights)">
        <include file="$(find panther_lights)/launch/panther_lights_controller.launch"></include>
        <node pkg="rosservice" type="rosservice" name="initial_panther_lights" args="call --wait /set_panther_lights  10 ''" />
    </group>

    <group if="$(arg use_imu)">
        <include file="$(find panther_driver)/launch/phidgets_imu.launch"></include>
    </group>

    <group if="$(arg webui_joy)">
        <arg name="wait_nodes" default=""/>
        <arg name="linear_scale" default="1" />
        <arg name="angular_scale" default="1" />
        <arg name="node_name" default="webui_node_server"/>
        <node pkg="webui-ros-joystick" type="node_server.sh" name="$(arg node_name)" output="screen" args=" --wait $(arg wait_nodes) --lin $(arg linear_scale) --ang $(arg angular_scale)"/>
    </group>
    
    <group if="$(arg joy)">
        <include file="$(find logitech_f710_joy_ros)/launch/joy_teleop.launch"/>
    </group>
    
</launch>
